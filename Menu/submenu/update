#!/usr/bin/bash
# source <File Path>

echo -e "\n"
echo "Enter the name of the table you want to update:"
ls -1 ../../DBMS/"$name"/
echo -e "\n"

read -p "Enter table name: " table
if [[ -f "../../DBMS/"$name"/"$table"" ]]; then
	tablePath="../../DBMS/"$name"/"$table""
while true
do
select choice in Update Exit
	do
	case $choice in
	"Update")
		echo -e "\n"
        sed -n '1p' "$tablePath" | column -t -s":" | awk '{for(i=1; i<=NF; i++) printf "%d.%s  ", i, $i; print ""}'
		read -p "Enter the field number used in condition: " conditionField
		if  [[ ! "$conditionField" =~ ^[1-9][0-9]*$ ]] 
		then
			echo Please enter a number
			continue
		fi		
		check=$(awk -F: -v conditionField="$conditionField"  'NR==1 {if (conditionField<=NF && conditionField>0) print "True"} ' "$tablePath")
		if [[ $check == "True" ]] 
		then
			read -p "Enter the value used in condition: " conditionValue			
		else
			echo Field does not exit going back to the update menu
			break 
		fi	
		check=$(awk -F: -v conditionField="$conditionField"  'NR==1 {if (conditionField<=NF && conditionField>0) print "True"} ' "$tablePath")
		sed -n '1p' "$tablePath" | column -t -s":" | awk '{for(i=1; i<=NF; i++) printf "%d.%s  ", i, $i; print ""}'
		read -p "Enter the field number you want to update : " changingField
		if  [[ ! "$changingField" =~ ^[1-9][0-9]*$ ]] 
		then
			echo Please enter a number
			continue
		fi		
		check=$(awk -F: -v changingField="$changingField" 'NR==1 {if (changingField<=NF && changingField>0) print "True"}' "$tablePath")
		if [[ $check == "True" ]]		 
		then			
			read -p "Enter the new value: " value
			fieldType=$(awk -F: -v changingField="$changingField" 'NR==2 {print $changingField}' "$tablePath")
			if [[ $fieldType == "Integer" && ! $value =~ ^[1-9][0-9]*$ ]]
			then
				echo Wrong entery going back to the update menu
				break 
			elif [[ $fieldType == "String" && ! $value =~ ^[a-zA-Z][a-zA-Z0-9]*$ ]]			
			then
				echo Wrong entery going back to the update menu
				break
			else 			
			check=$(awk -F: -v OFS=":" -v conditionField="$conditionField" -v conditionValue="$conditionValue" 'NR>=4 {if ($conditionField == conditionValue) print "True"} ' "$tablePath")
			if [[ $check != "True" ]]		 
			then
				echo Condition does not match
				break
			fi
			check=$(awk -F: -v value="$value" 'NR>=4 {if ($1 == value) print "True"} ' "$tablePath")
			if [[ $check == "True" ]]		 
			then
				echo PK already exists
				break
			fi
			echo Are you sure you want to update 
			select option in yes no
			do
			case $option in 
			"yes")
				tmpfile="$(mktemp)"
				awk -F: -v OFS=":" -v changingField="$changingField" -v value="$value" -v conditionField="$conditionField" -v conditionValue="$conditionValue" 'NR>=4 {if ($conditionField == conditionValue)  $changingField = value } { print } ' "$tablePath" > "$tmpfile" && mv "$tmpfile" "$tablePath"
				echo "Record updated successfully"
				break 2
				;;
			"no")
				break 2
				echo "going back the the update menu"
				;;
     		*)
 		       echo "invalid answer select 1 or 2"
 		       ;;
			esac
			done		
			
			echo -e "\n"
			fi
		else
			echo Field does not exit going back to the update menu
			break
		fi	
		;;
	"Exit")
		break 2
		;;	
	*)
		echo WRONG ENTERY
	esac
	done
done
	
	else
		echo Table does not exist
	fi	