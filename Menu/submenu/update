#!/usr/bin/bash


clear
ls -1 ../../DBMS/"$name"/
echo ###################################################
read -p "Enter table name: " table
if [[ -f "../../DBMS/"$name"/"$table"" ]] then
	tablePath="../../DBMS/"$name"/"$table""
	select choice in Update Exit
	do
	case $choice in
	"Update")
		echo ###################################################
		sed -n '1p' $tablePath | column -t -s":"
		read -p "Enter the field number used in condition: " conditionField
		if  [[ ! "$conditionField" =~ ^[1-9][0-9]*$ ]] 
		then
			echo Please enter a number
			continue
		fi		
		check=$(awk -F: -v conditionField="$conditionField"  'NR==1 {if (conditionField<=NF && conditionField>0) print "True"} ' "$tablePath")
		if [[ $check == "True" ]] 
		then
			read -p "Enter the value used in condition: " conditionValue			
		else
			echo Field does not exit 
			continue
		fi	
		echo ###################################################
		read -p "Enter the field number of the new value: " changingField
		if  [[ ! "$changingField" =~ ^[1-9][0-9]*$ ]] 
		then
			echo Please enter a number
			continue
		fi
		check=$(awk -F: -v changingField="$changingField" 'NR==1 {if (changingField<=NF && changingField>0) print "True"}' "$tablePath")
		if [[ $check == "True" ]]		 
		then			
			read -p "Enter the new value: " value
			fieldType=$(awk -F: -v changingField="$changingField" 'NR==2 {print $changingField}' "$tablePath")
			if [[ $fieldType == "Integer" && ! $value =~ ^[1-9][0-9]*$ ]]
			then
				echo Wrong entery
				continue
			elif [[ $fieldType == "String" && ! $value =~ ^[a-zA-Z][a-zA-Z0-9]*$ ]]			
			then
				echo Wrong entery
				continue
			else 
			echo ###################################################
			echo Are you sure you want to update 
			select option in yes no
			do
			case $option in 
			"yes")
				tmpfile="$(mktemp)"
				awk -F: -v OFS=":" -v changingField="$changingField" -v value="$value" -v conditionField="$conditionField" -v conditionValue="$conditionValue" 'NR>=4 {if ($conditionField == conditionValue)  $changingField = value } { print } ' "$tablePath" > "$tmpfile" && mv "$tmpfile" "$tablePath"
				echo "Record updated successfully"
				break
				;;
			"no")
				break
				;;
     			 *)
 			       echo "invalid answer"
 			       ;;
			esac
			done		
			
			echo ###################################################
			fi
		else
			echo Field does not exist
			continue
		fi	
		;;
	"Exit")
		break
		;;	
	*)
		echo WRONG ENTERY
	esac
	done
	clear
	source ./submenu	
	else
		echo Table does not exist
	fi	
